.class public Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;
.super Ljava/lang/Object;
.source "OpenWnnClauseConverterJAJP.java"


# static fields
.field private static final CLAUSE_COST:I = -0x3e8

.field private static final FREQ_LEARN:I = 0x258

.field private static final FREQ_USER:I = 0x1f4

.field public static final MAX_INPUT_LENGTH:I = 0x32


# instance fields
.field private mAllIndepWordBag:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList",
            "<",
            "Ljp/co/omronsoft/openwnn/WnnWord;",
            ">;>;"
        }
    .end annotation
.end field

.field private mConnectMatrix:[[B

.field private mConvertResult:Ljava/util/LinkedList;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/LinkedList",
            "<",
            "Ljp/co/omronsoft/openwnn/WnnClause;",
            ">;"
        }
    .end annotation
.end field

.field private mDictionary:Ljp/co/omronsoft/openwnn/WnnDictionary;

.field private mFilter:Ljp/co/omronsoft/openwnn/CandidateFilter;

.field private mFzkPatterns:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList",
            "<",
            "Ljp/co/omronsoft/openwnn/WnnWord;",
            ">;>;"
        }
    .end annotation
.end field

.field private mIndepWordBag:Ljava/util/HashMap;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "Ljava/util/HashMap",
            "<",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList",
            "<",
            "Ljp/co/omronsoft/openwnn/WnnWord;",
            ">;>;"
        }
    .end annotation
.end field

.field private mPosDefault:Ljp/co/omronsoft/openwnn/WnnPOS;

.field private mPosEndOfClause1:Ljp/co/omronsoft/openwnn/WnnPOS;

.field private mPosEndOfClause2:Ljp/co/omronsoft/openwnn/WnnPOS;

.field private mPosEndOfClause3:Ljp/co/omronsoft/openwnn/WnnPOS;

.field private mSentenceBuffer:[Ljp/co/omronsoft/openwnn/WnnSentence;


# direct methods
.method public constructor <init>()V
    .locals 1

    .prologue
    .line 82
    invoke-direct {p0}, Ljava/lang/Object;-><init>()V

    .line 77
    const/4 v0, 0x0

    iput-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mFilter:Ljp/co/omronsoft/openwnn/CandidateFilter;

    .line 83
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mIndepWordBag:Ljava/util/HashMap;

    .line 84
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mAllIndepWordBag:Ljava/util/HashMap;

    .line 85
    new-instance v0, Ljava/util/HashMap;

    invoke-direct {v0}, Ljava/util/HashMap;-><init>()V

    iput-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mFzkPatterns:Ljava/util/HashMap;

    .line 86
    new-instance v0, Ljava/util/LinkedList;

    invoke-direct {v0}, Ljava/util/LinkedList;-><init>()V

    iput-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mConvertResult:Ljava/util/LinkedList;

    .line 88
    const/16 v0, 0x32

    new-array v0, v0, [Ljp/co/omronsoft/openwnn/WnnSentence;

    iput-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mSentenceBuffer:[Ljp/co/omronsoft/openwnn/WnnSentence;

    .line 89
    return-void
.end method

.method private addAutoGeneratedCandidates(Ljava/lang/String;Ljava/util/ArrayList;Z)V
    .locals 3
    .param p1, "input"    # Ljava/lang/String;
    .param p3, "all"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Ljava/util/ArrayList",
            "<",
            "Ljp/co/omronsoft/openwnn/WnnWord;",
            ">;Z)V"
        }
    .end annotation

    .prologue
    .line 575
    .local p2, "wordList":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    new-instance v0, Ljp/co/omronsoft/openwnn/WnnWord;

    iget-object v1, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mPosDefault:Ljp/co/omronsoft/openwnn/WnnPOS;

    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v2

    mul-int/lit16 v2, v2, -0x3e9

    invoke-direct {v0, p1, p1, v1, v2}, Ljp/co/omronsoft/openwnn/WnnWord;-><init>(Ljava/lang/String;Ljava/lang/String;Ljp/co/omronsoft/openwnn/WnnPOS;I)V

    invoke-virtual {p2, v0}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 576
    return-void
.end method

.method private addClause(Ljava/util/LinkedList;Ljava/lang/String;Ljp/co/omronsoft/openwnn/WnnWord;Ljp/co/omronsoft/openwnn/WnnWord;Ljp/co/omronsoft/openwnn/WnnPOS;Z)Z
    .locals 7
    .param p2, "input"    # Ljava/lang/String;
    .param p3, "stem"    # Ljp/co/omronsoft/openwnn/WnnWord;
    .param p4, "fzk"    # Ljp/co/omronsoft/openwnn/WnnWord;
    .param p5, "terminal"    # Ljp/co/omronsoft/openwnn/WnnPOS;
    .param p6, "all"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/LinkedList",
            "<",
            "Ljp/co/omronsoft/openwnn/WnnClause;",
            ">;",
            "Ljava/lang/String;",
            "Ljp/co/omronsoft/openwnn/WnnWord;",
            "Ljp/co/omronsoft/openwnn/WnnWord;",
            "Ljp/co/omronsoft/openwnn/WnnPOS;",
            "Z)Z"
        }
    .end annotation

    .prologue
    .local p1, "clauseList":Ljava/util/LinkedList;, "Ljava/util/LinkedList<Ljp/co/omronsoft/openwnn/WnnClause;>;"
    const/4 v5, 0x1

    const/4 v4, 0x0

    .line 361
    const/4 v0, 0x0

    .line 363
    .local v0, "clause":Ljp/co/omronsoft/openwnn/WnnClause;
    if-nez p4, :cond_1

    .line 364
    iget-object v3, p3, Ljp/co/omronsoft/openwnn/WnnWord;->partOfSpeech:Ljp/co/omronsoft/openwnn/WnnPOS;

    iget v3, v3, Ljp/co/omronsoft/openwnn/WnnPOS;->right:I

    iget v6, p5, Ljp/co/omronsoft/openwnn/WnnPOS;->left:I

    invoke-direct {p0, v3, v6}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->connectible(II)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 365
    new-instance v0, Ljp/co/omronsoft/openwnn/WnnClause;

    .end local v0    # "clause":Ljp/co/omronsoft/openwnn/WnnClause;
    invoke-direct {v0, p2, p3}, Ljp/co/omronsoft/openwnn/WnnClause;-><init>(Ljava/lang/String;Ljp/co/omronsoft/openwnn/WnnWord;)V

    .line 373
    .restart local v0    # "clause":Ljp/co/omronsoft/openwnn/WnnClause;
    :cond_0
    :goto_0
    if-nez v0, :cond_2

    move v3, v4

    .line 409
    :goto_1
    return v3

    .line 368
    :cond_1
    iget-object v3, p3, Ljp/co/omronsoft/openwnn/WnnWord;->partOfSpeech:Ljp/co/omronsoft/openwnn/WnnPOS;

    iget v3, v3, Ljp/co/omronsoft/openwnn/WnnPOS;->right:I

    iget-object v6, p4, Ljp/co/omronsoft/openwnn/WnnWord;->partOfSpeech:Ljp/co/omronsoft/openwnn/WnnPOS;

    iget v6, v6, Ljp/co/omronsoft/openwnn/WnnPOS;->left:I

    invoke-direct {p0, v3, v6}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->connectible(II)Z

    move-result v3

    if-eqz v3, :cond_0

    iget-object v3, p4, Ljp/co/omronsoft/openwnn/WnnWord;->partOfSpeech:Ljp/co/omronsoft/openwnn/WnnPOS;

    iget v3, v3, Ljp/co/omronsoft/openwnn/WnnPOS;->right:I

    iget v6, p5, Ljp/co/omronsoft/openwnn/WnnPOS;->left:I

    invoke-direct {p0, v3, v6}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->connectible(II)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 370
    new-instance v0, Ljp/co/omronsoft/openwnn/WnnClause;

    .end local v0    # "clause":Ljp/co/omronsoft/openwnn/WnnClause;
    invoke-direct {v0, p2, p3, p4}, Ljp/co/omronsoft/openwnn/WnnClause;-><init>(Ljava/lang/String;Ljp/co/omronsoft/openwnn/WnnWord;Ljp/co/omronsoft/openwnn/WnnWord;)V

    .restart local v0    # "clause":Ljp/co/omronsoft/openwnn/WnnClause;
    goto :goto_0

    .line 376
    :cond_2
    iget-object v3, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mFilter:Ljp/co/omronsoft/openwnn/CandidateFilter;

    if-eqz v3, :cond_3

    iget-object v3, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mFilter:Ljp/co/omronsoft/openwnn/CandidateFilter;

    invoke-virtual {v3, v0}, Ljp/co/omronsoft/openwnn/CandidateFilter;->isAllowed(Ljp/co/omronsoft/openwnn/WnnWord;)Z

    move-result v3

    if-nez v3, :cond_3

    move v3, v4

    .line 377
    goto :goto_1

    .line 381
    :cond_3
    invoke-virtual {p1}, Ljava/util/LinkedList;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_4

    .line 383
    invoke-virtual {p1, v4, v0}, Ljava/util/LinkedList;->add(ILjava/lang/Object;)V

    move v3, v5

    .line 384
    goto :goto_1

    .line 386
    :cond_4
    if-nez p6, :cond_5

    .line 388
    invoke-virtual {p1, v4}, Ljava/util/LinkedList;->get(I)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljp/co/omronsoft/openwnn/WnnClause;

    .line 389
    iget v3, v3, Ljp/co/omronsoft/openwnn/WnnClause;->frequency:I

    iget v6, v0, Ljp/co/omronsoft/openwnn/WnnClause;->frequency:I

    if-ge v3, v6, :cond_7

    .line 390
    invoke-virtual {p1, v4, v0}, Ljava/util/LinkedList;->set(ILjava/lang/Object;)Ljava/lang/Object;

    move v3, v5

    .line 391
    goto :goto_1

    .line 395
    :cond_5
    invoke-virtual {p1}, Ljava/util/LinkedList;->iterator()Ljava/util/Iterator;

    move-result-object v1

    .line 396
    .local v1, "clauseListi":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljp/co/omronsoft/openwnn/WnnClause;>;"
    const/4 v2, 0x0

    .line 397
    .local v2, "index":I
    :goto_2
    invoke-interface {v1}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_6

    .line 398
    invoke-interface {v1}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljp/co/omronsoft/openwnn/WnnClause;

    .line 399
    iget v3, v3, Ljp/co/omronsoft/openwnn/WnnClause;->frequency:I

    iget v4, v0, Ljp/co/omronsoft/openwnn/WnnClause;->frequency:I

    if-lt v3, v4, :cond_6

    .line 400
    add-int/lit8 v2, v2, 0x1

    .line 403
    goto :goto_2

    .line 404
    :cond_6
    invoke-virtual {p1, v2, v0}, Ljava/util/LinkedList;->add(ILjava/lang/Object;)V

    move v3, v5

    .line 405
    goto :goto_1

    .end local v1    # "clauseListi":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljp/co/omronsoft/openwnn/WnnClause;>;"
    .end local v2    # "index":I
    :cond_7
    move v3, v4

    .line 409
    goto :goto_1
.end method

.method private connectible(II)Z
    .locals 1
    .param p1, "right"    # I
    .param p2, "left"    # I

    .prologue
    .line 423
    :try_start_0
    iget-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mConnectMatrix:[[B

    aget-object v0, v0, p2

    aget-byte v0, v0, p1
    :try_end_0
    .catch Ljava/lang/Exception; {:try_start_0 .. :try_end_0} :catch_0

    if-eqz v0, :cond_0

    .line 424
    const/4 v0, 0x1

    .line 428
    :goto_0
    return v0

    :catch_0
    move-exception v0

    :cond_0
    const/4 v0, 0x0

    goto :goto_0
.end method

.method private defaultClause(Ljava/lang/String;)Ljp/co/omronsoft/openwnn/WnnClause;
    .locals 3
    .param p1, "input"    # Ljava/lang/String;

    .prologue
    .line 588
    new-instance v0, Ljp/co/omronsoft/openwnn/WnnClause;

    iget-object v1, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mPosDefault:Ljp/co/omronsoft/openwnn/WnnPOS;

    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v2

    mul-int/lit16 v2, v2, -0x3e9

    invoke-direct {v0, p1, p1, v1, v2}, Ljp/co/omronsoft/openwnn/WnnClause;-><init>(Ljava/lang/String;Ljava/lang/String;Ljp/co/omronsoft/openwnn/WnnPOS;I)V

    return-object v0
.end method

.method private getAncillaryPattern(Ljava/lang/String;)Ljava/util/ArrayList;
    .locals 14
    .param p1, "input"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/ArrayList",
            "<",
            "Ljp/co/omronsoft/openwnn/WnnWord;",
            ">;"
        }
    .end annotation

    .prologue
    .line 439
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v10

    if-nez v10, :cond_1

    .line 440
    const/4 v6, 0x0

    .line 493
    :cond_0
    return-object v6

    .line 443
    :cond_1
    iget-object v5, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mFzkPatterns:Ljava/util/HashMap;

    .line 444
    .local v5, "fzkPat":Ljava/util/HashMap;, "Ljava/util/HashMap<Ljava/lang/String;Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;>;"
    invoke-virtual {v5, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljava/util/ArrayList;

    .line 445
    .local v6, "fzks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    if-nez v6, :cond_0

    .line 450
    iget-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mDictionary:Ljp/co/omronsoft/openwnn/WnnDictionary;

    .line 451
    .local v0, "dict":Ljp/co/omronsoft/openwnn/WnnDictionary;
    invoke-interface {v0}, Ljp/co/omronsoft/openwnn/WnnDictionary;->clearDictionary()I

    .line 452
    invoke-interface {v0}, Ljp/co/omronsoft/openwnn/WnnDictionary;->clearApproxPattern()V

    .line 453
    const/4 v10, 0x6

    const/16 v11, 0x190

    const/16 v12, 0x1f4

    invoke-interface {v0, v10, v11, v12}, Ljp/co/omronsoft/openwnn/WnnDictionary;->setDictionary(III)I

    .line 455
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v10

    add-int/lit8 v8, v10, -0x1

    .local v8, "start":I
    :goto_0
    if-ltz v8, :cond_0

    .line 456
    invoke-virtual {p1, v8}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v7

    .line 458
    .local v7, "key":Ljava/lang/String;
    invoke-virtual {v5, v7}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v6

    .end local v6    # "fzks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    check-cast v6, Ljava/util/ArrayList;

    .line 459
    .restart local v6    # "fzks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    if-nez v6, :cond_6

    .line 460
    new-instance v6, Ljava/util/ArrayList;

    .end local v6    # "fzks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    invoke-direct {v6}, Ljava/util/ArrayList;-><init>()V

    .line 464
    .restart local v6    # "fzks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    iget-object v10, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mFzkPatterns:Ljava/util/HashMap;

    invoke-virtual {v10, v7, v6}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 467
    const/4 v10, 0x0

    const/4 v11, 0x0

    invoke-interface {v0, v10, v11, v7}, Ljp/co/omronsoft/openwnn/WnnDictionary;->searchWord(IILjava/lang/String;)I

    .line 469
    :goto_1
    invoke-interface {v0}, Ljp/co/omronsoft/openwnn/WnnDictionary;->getNextWord()Ljp/co/omronsoft/openwnn/WnnWord;

    move-result-object v9

    .local v9, "word":Ljp/co/omronsoft/openwnn/WnnWord;
    if-eqz v9, :cond_2

    .line 470
    invoke-virtual {v6, v9}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_1

    .line 474
    :cond_2
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v10

    add-int/lit8 v1, v10, -0x1

    .local v1, "end":I
    :goto_2
    if-le v1, v8, :cond_6

    .line 475
    invoke-virtual {p1, v1}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v10

    invoke-virtual {v5, v10}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v3

    check-cast v3, Ljava/util/ArrayList;

    .line 476
    .local v3, "followFzks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    if-eqz v3, :cond_5

    invoke-virtual {v3}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v10

    if-nez v10, :cond_5

    .line 477
    const/4 v10, 0x0

    const/4 v11, 0x0

    invoke-virtual {p1, v8, v1}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v12

    invoke-interface {v0, v10, v11, v12}, Ljp/co/omronsoft/openwnn/WnnDictionary;->searchWord(IILjava/lang/String;)I

    .line 481
    :cond_3
    invoke-interface {v0}, Ljp/co/omronsoft/openwnn/WnnDictionary;->getNextWord()Ljp/co/omronsoft/openwnn/WnnWord;

    move-result-object v9

    if-eqz v9, :cond_5

    .line 482
    invoke-virtual {v3}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v4

    .line 483
    .local v4, "followFzksi":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    :cond_4
    :goto_3
    invoke-interface {v4}, Ljava/util/Iterator;->hasNext()Z

    move-result v10

    if-eqz v10, :cond_3

    .line 484
    invoke-interface {v4}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v2

    check-cast v2, Ljp/co/omronsoft/openwnn/WnnWord;

    .line 485
    .local v2, "follow":Ljp/co/omronsoft/openwnn/WnnWord;
    iget-object v10, v9, Ljp/co/omronsoft/openwnn/WnnWord;->partOfSpeech:Ljp/co/omronsoft/openwnn/WnnPOS;

    iget v10, v10, Ljp/co/omronsoft/openwnn/WnnPOS;->right:I

    iget-object v11, v2, Ljp/co/omronsoft/openwnn/WnnWord;->partOfSpeech:Ljp/co/omronsoft/openwnn/WnnPOS;

    iget v11, v11, Ljp/co/omronsoft/openwnn/WnnPOS;->left:I

    invoke-direct {p0, v10, v11}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->connectible(II)Z

    move-result v10

    if-eqz v10, :cond_4

    .line 486
    new-instance v10, Ljp/co/omronsoft/openwnn/WnnWord;

    new-instance v11, Ljp/co/omronsoft/openwnn/WnnPOS;

    iget-object v12, v9, Ljp/co/omronsoft/openwnn/WnnWord;->partOfSpeech:Ljp/co/omronsoft/openwnn/WnnPOS;

    iget v12, v12, Ljp/co/omronsoft/openwnn/WnnPOS;->left:I

    iget-object v13, v2, Ljp/co/omronsoft/openwnn/WnnWord;->partOfSpeech:Ljp/co/omronsoft/openwnn/WnnPOS;

    iget v13, v13, Ljp/co/omronsoft/openwnn/WnnPOS;->right:I

    invoke-direct {v11, v12, v13}, Ljp/co/omronsoft/openwnn/WnnPOS;-><init>(II)V

    invoke-direct {v10, v7, v7, v11}, Ljp/co/omronsoft/openwnn/WnnWord;-><init>(Ljava/lang/String;Ljava/lang/String;Ljp/co/omronsoft/openwnn/WnnPOS;)V

    invoke-virtual {v6, v10}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_3

    .line 474
    .end local v2    # "follow":Ljp/co/omronsoft/openwnn/WnnWord;
    .end local v4    # "followFzksi":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    :cond_5
    add-int/lit8 v1, v1, -0x1

    goto :goto_2

    .line 455
    .end local v1    # "end":I
    .end local v3    # "followFzks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    .end local v9    # "word":Ljp/co/omronsoft/openwnn/WnnWord;
    :cond_6
    add-int/lit8 v8, v8, -0x1

    goto/16 :goto_0
.end method

.method private getIndependentWords(Ljava/lang/String;Z)Ljava/util/ArrayList;
    .locals 11
    .param p1, "input"    # Ljava/lang/String;
    .param p2, "all"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            "Z)",
            "Ljava/util/ArrayList",
            "<",
            "Ljp/co/omronsoft/openwnn/WnnWord;",
            ">;"
        }
    .end annotation

    .prologue
    const/16 v10, 0x258

    const/16 v9, 0x190

    const/16 v8, 0x1f4

    const/4 v7, 0x0

    .line 507
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v5

    if-nez v5, :cond_1

    .line 508
    const/4 v4, 0x0

    .line 560
    :cond_0
    :goto_0
    return-object v4

    .line 511
    :cond_1
    if-eqz p2, :cond_3

    iget-object v5, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mAllIndepWordBag:Ljava/util/HashMap;

    invoke-virtual {v5, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/util/ArrayList;

    move-object v4, v5

    .line 513
    .local v4, "words":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    :goto_1
    if-nez v4, :cond_0

    .line 515
    iget-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mDictionary:Ljp/co/omronsoft/openwnn/WnnDictionary;

    .line 516
    .local v0, "dict":Ljp/co/omronsoft/openwnn/WnnDictionary;
    invoke-interface {v0}, Ljp/co/omronsoft/openwnn/WnnDictionary;->clearDictionary()I

    .line 517
    invoke-interface {v0}, Ljp/co/omronsoft/openwnn/WnnDictionary;->clearApproxPattern()V

    .line 518
    const/4 v5, 0x4

    const/16 v6, 0xa

    invoke-interface {v0, v5, v7, v6}, Ljp/co/omronsoft/openwnn/WnnDictionary;->setDictionary(III)I

    .line 519
    const/4 v5, 0x5

    invoke-interface {v0, v5, v9, v8}, Ljp/co/omronsoft/openwnn/WnnDictionary;->setDictionary(III)I

    .line 520
    const/4 v5, -0x1

    invoke-interface {v0, v5, v8, v8}, Ljp/co/omronsoft/openwnn/WnnDictionary;->setDictionary(III)I

    .line 521
    const/4 v5, -0x2

    invoke-interface {v0, v5, v10, v10}, Ljp/co/omronsoft/openwnn/WnnDictionary;->setDictionary(III)I

    .line 523
    new-instance v4, Ljava/util/ArrayList;

    .end local v4    # "words":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    invoke-direct {v4}, Ljava/util/ArrayList;-><init>()V

    .line 525
    .restart local v4    # "words":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    if-eqz p2, :cond_4

    .line 526
    iget-object v5, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mAllIndepWordBag:Ljava/util/HashMap;

    invoke-virtual {v5, p1, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 527
    invoke-interface {v0, v7, v7, p1}, Ljp/co/omronsoft/openwnn/WnnDictionary;->searchWord(IILjava/lang/String;)I

    .line 529
    :cond_2
    :goto_2
    invoke-interface {v0}, Ljp/co/omronsoft/openwnn/WnnDictionary;->getNextWord()Ljp/co/omronsoft/openwnn/WnnWord;

    move-result-object v3

    .local v3, "word":Ljp/co/omronsoft/openwnn/WnnWord;
    if-eqz v3, :cond_9

    .line 530
    iget-object v5, v3, Ljp/co/omronsoft/openwnn/WnnWord;->stroke:Ljava/lang/String;

    invoke-virtual {p1, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_2

    .line 531
    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    goto :goto_2

    .line 511
    .end local v0    # "dict":Ljp/co/omronsoft/openwnn/WnnDictionary;
    .end local v3    # "word":Ljp/co/omronsoft/openwnn/WnnWord;
    .end local v4    # "words":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    :cond_3
    iget-object v5, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mIndepWordBag:Ljava/util/HashMap;

    invoke-virtual {v5, p1}, Ljava/util/HashMap;->get(Ljava/lang/Object;)Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljava/util/ArrayList;

    move-object v4, v5

    goto :goto_1

    .line 535
    .restart local v0    # "dict":Ljp/co/omronsoft/openwnn/WnnDictionary;
    .restart local v4    # "words":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    :cond_4
    iget-object v5, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mIndepWordBag:Ljava/util/HashMap;

    invoke-virtual {v5, p1, v4}, Ljava/util/HashMap;->put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;

    .line 536
    invoke-interface {v0, v7, v7, p1}, Ljp/co/omronsoft/openwnn/WnnDictionary;->searchWord(IILjava/lang/String;)I

    .line 538
    :cond_5
    invoke-interface {v0}, Ljp/co/omronsoft/openwnn/WnnDictionary;->getNextWord()Ljp/co/omronsoft/openwnn/WnnWord;

    move-result-object v3

    .restart local v3    # "word":Ljp/co/omronsoft/openwnn/WnnWord;
    if-eqz v3, :cond_9

    .line 539
    iget-object v5, v3, Ljp/co/omronsoft/openwnn/WnnWord;->stroke:Ljava/lang/String;

    invoke-virtual {p1, v5}, Ljava/lang/String;->equals(Ljava/lang/Object;)Z

    move-result v5

    if-eqz v5, :cond_5

    .line 540
    invoke-virtual {v4}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v2

    .line 541
    .local v2, "list":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    const/4 v1, 0x0

    .line 542
    .local v1, "found":Z
    :cond_6
    invoke-interface {v2}, Ljava/util/Iterator;->hasNext()Z

    move-result v5

    if-eqz v5, :cond_7

    .line 543
    invoke-interface {v2}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v5

    check-cast v5, Ljp/co/omronsoft/openwnn/WnnWord;

    .line 544
    iget-object v5, v5, Ljp/co/omronsoft/openwnn/WnnWord;->partOfSpeech:Ljp/co/omronsoft/openwnn/WnnPOS;

    iget v5, v5, Ljp/co/omronsoft/openwnn/WnnPOS;->right:I

    iget-object v6, v3, Ljp/co/omronsoft/openwnn/WnnWord;->partOfSpeech:Ljp/co/omronsoft/openwnn/WnnPOS;

    iget v6, v6, Ljp/co/omronsoft/openwnn/WnnPOS;->right:I

    if-ne v5, v6, :cond_6

    .line 545
    const/4 v1, 0x1

    .line 549
    :cond_7
    if-nez v1, :cond_8

    .line 550
    invoke-virtual {v4, v3}, Ljava/util/ArrayList;->add(Ljava/lang/Object;)Z

    .line 552
    :cond_8
    iget v5, v3, Ljp/co/omronsoft/openwnn/WnnWord;->frequency:I

    if-ge v5, v9, :cond_5

    .line 553
    .end local v1    # "found":Z
    .end local v2    # "list":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    :cond_9
    invoke-direct {p0, p1, v4, p2}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->addAutoGeneratedCandidates(Ljava/lang/String;Ljava/util/ArrayList;Z)V

    goto/16 :goto_0
.end method

.method private singleClauseConvert(Ljava/util/LinkedList;Ljava/lang/String;Ljp/co/omronsoft/openwnn/WnnPOS;Z)Z
    .locals 18
    .param p2, "input"    # Ljava/lang/String;
    .param p3, "terminal"    # Ljp/co/omronsoft/openwnn/WnnPOS;
    .param p4, "all"    # Z
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/util/LinkedList",
            "<",
            "Ljp/co/omronsoft/openwnn/WnnClause;",
            ">;",
            "Ljava/lang/String;",
            "Ljp/co/omronsoft/openwnn/WnnPOS;",
            "Z)Z"
        }
    .end annotation

    .prologue
    .line 288
    .local p1, "clauseList":Ljava/util/LinkedList;, "Ljava/util/LinkedList<Ljp/co/omronsoft/openwnn/WnnClause;>;"
    const/4 v13, 0x0

    .line 291
    .local v13, "ret":Z
    move-object/from16 v0, p0

    move-object/from16 v1, p2

    move/from16 v2, p4

    invoke-direct {v0, v1, v2}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->getIndependentWords(Ljava/lang/String;Z)Ljava/util/ArrayList;

    move-result-object v15

    .line 292
    .local v15, "stems":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    if-eqz v15, :cond_1

    invoke-virtual {v15}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_1

    .line 293
    invoke-virtual {v15}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v16

    .line 294
    .local v16, "stemsi":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    :cond_0
    :goto_0
    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_1

    .line 295
    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljp/co/omronsoft/openwnn/WnnWord;

    .line 296
    .local v6, "stem":Ljp/co/omronsoft/openwnn/WnnWord;
    const/4 v7, 0x0

    move-object/from16 v3, p0

    move-object/from16 v4, p1

    move-object/from16 v5, p2

    move-object/from16 v8, p3

    move/from16 v9, p4

    invoke-direct/range {v3 .. v9}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->addClause(Ljava/util/LinkedList;Ljava/lang/String;Ljp/co/omronsoft/openwnn/WnnWord;Ljp/co/omronsoft/openwnn/WnnWord;Ljp/co/omronsoft/openwnn/WnnPOS;Z)Z

    move-result v3

    if-eqz v3, :cond_0

    .line 297
    const/4 v13, 0x1

    goto :goto_0

    .line 303
    .end local v6    # "stem":Ljp/co/omronsoft/openwnn/WnnWord;
    .end local v16    # "stemsi":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    :cond_1
    const/16 v12, -0x7d0

    .line 304
    .local v12, "max":I
    const/4 v14, 0x1

    .local v14, "split":I
    :goto_1
    invoke-virtual/range {p2 .. p2}, Ljava/lang/String;->length()I

    move-result v3

    if-ge v14, v3, :cond_3

    .line 306
    move-object/from16 v0, p2

    invoke-virtual {v0, v14}, Ljava/lang/String;->substring(I)Ljava/lang/String;

    move-result-object v17

    .line 307
    .local v17, "str":Ljava/lang/String;
    move-object/from16 v0, p0

    move-object/from16 v1, v17

    invoke-direct {v0, v1}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->getAncillaryPattern(Ljava/lang/String;)Ljava/util/ArrayList;

    move-result-object v10

    .line 308
    .local v10, "fzks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    if-eqz v10, :cond_8

    invoke-virtual {v10}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    if-nez v3, :cond_8

    .line 309
    const/4 v3, 0x0

    move-object/from16 v0, p2

    invoke-virtual {v0, v3, v14}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v17

    .line 314
    move-object/from16 v0, p0

    move-object/from16 v1, v17

    move/from16 v2, p4

    invoke-direct {v0, v1, v2}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->getIndependentWords(Ljava/lang/String;Z)Ljava/util/ArrayList;

    move-result-object v15

    .line 315
    if-eqz v15, :cond_2

    invoke-virtual {v15}, Ljava/util/ArrayList;->isEmpty()Z

    move-result v3

    if-eqz v3, :cond_4

    .line 316
    :cond_2
    move-object/from16 v0, p0

    iget-object v3, v0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mDictionary:Ljp/co/omronsoft/openwnn/WnnDictionary;

    const/4 v4, 0x1

    const/4 v5, 0x0

    move-object/from16 v0, v17

    invoke-interface {v3, v4, v5, v0}, Ljp/co/omronsoft/openwnn/WnnDictionary;->searchWord(IILjava/lang/String;)I

    move-result v3

    if-gtz v3, :cond_8

    .line 339
    .end local v10    # "fzks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    .end local v17    # "str":Ljava/lang/String;
    :cond_3
    return v13

    .line 324
    .restart local v10    # "fzks":Ljava/util/ArrayList;, "Ljava/util/ArrayList<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    .restart local v17    # "str":Ljava/lang/String;
    :cond_4
    invoke-virtual {v15}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v16

    .line 325
    .restart local v16    # "stemsi":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    :cond_5
    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_8

    .line 326
    invoke-interface/range {v16 .. v16}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v6

    check-cast v6, Ljp/co/omronsoft/openwnn/WnnWord;

    .line 327
    .restart local v6    # "stem":Ljp/co/omronsoft/openwnn/WnnWord;
    if-nez p4, :cond_6

    iget v3, v6, Ljp/co/omronsoft/openwnn/WnnWord;->frequency:I

    if-le v3, v12, :cond_5

    .line 328
    :cond_6
    invoke-virtual {v10}, Ljava/util/ArrayList;->iterator()Ljava/util/Iterator;

    move-result-object v11

    .line 329
    .local v11, "fzksi":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    :cond_7
    :goto_2
    invoke-interface {v11}, Ljava/util/Iterator;->hasNext()Z

    move-result v3

    if-eqz v3, :cond_5

    .line 330
    invoke-interface {v11}, Ljava/util/Iterator;->next()Ljava/lang/Object;

    move-result-object v7

    check-cast v7, Ljp/co/omronsoft/openwnn/WnnWord;

    .local v7, "fzk":Ljp/co/omronsoft/openwnn/WnnWord;
    move-object/from16 v3, p0

    move-object/from16 v4, p1

    move-object/from16 v5, p2

    move-object/from16 v8, p3

    move/from16 v9, p4

    .line 331
    invoke-direct/range {v3 .. v9}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->addClause(Ljava/util/LinkedList;Ljava/lang/String;Ljp/co/omronsoft/openwnn/WnnWord;Ljp/co/omronsoft/openwnn/WnnWord;Ljp/co/omronsoft/openwnn/WnnPOS;Z)Z

    move-result v3

    if-eqz v3, :cond_7

    .line 332
    const/4 v13, 0x1

    .line 333
    iget v12, v6, Ljp/co/omronsoft/openwnn/WnnWord;->frequency:I

    goto :goto_2

    .line 304
    .end local v6    # "stem":Ljp/co/omronsoft/openwnn/WnnWord;
    .end local v7    # "fzk":Ljp/co/omronsoft/openwnn/WnnWord;
    .end local v11    # "fzksi":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    .end local v16    # "stemsi":Ljava/util/Iterator;, "Ljava/util/Iterator<Ljp/co/omronsoft/openwnn/WnnWord;>;"
    :cond_8
    add-int/lit8 v14, v14, 0x1

    goto :goto_1
.end method


# virtual methods
.method public consecutiveClauseConvert(Ljava/lang/String;)Ljp/co/omronsoft/openwnn/WnnSentence;
    .locals 13
    .param p1, "input"    # Ljava/lang/String;

    .prologue
    const/4 v9, 0x0

    const/4 v12, 0x0

    .line 165
    new-instance v1, Ljava/util/LinkedList;

    invoke-direct {v1}, Ljava/util/LinkedList;-><init>()V

    .line 168
    .local v1, "clauses":Ljava/util/LinkedList;, "Ljava/util/LinkedList<Ljp/co/omronsoft/openwnn/WnnClause;>;"
    const/4 v3, 0x0

    .local v3, "i":I
    :goto_0
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v10

    if-ge v3, v10, :cond_0

    .line 169
    iget-object v10, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mSentenceBuffer:[Ljp/co/omronsoft/openwnn/WnnSentence;

    aput-object v9, v10, v3

    .line 168
    add-int/lit8 v3, v3, 0x1

    goto :goto_0

    .line 171
    :cond_0
    iget-object v6, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mSentenceBuffer:[Ljp/co/omronsoft/openwnn/WnnSentence;

    .line 174
    .local v6, "sentence":[Ljp/co/omronsoft/openwnn/WnnSentence;
    const/4 v7, 0x0

    .local v7, "start":I
    :goto_1
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v10

    if-ge v7, v10, :cond_b

    .line 175
    if-eqz v7, :cond_1

    add-int/lit8 v10, v7, -0x1

    aget-object v10, v6, v10

    if-eqz v10, :cond_3

    .line 176
    :cond_1
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v2

    .line 181
    .local v2, "end":I
    add-int/lit8 v10, v7, 0x14

    if-le v2, v10, :cond_2

    .line 182
    add-int/lit8 v2, v7, 0x14

    .line 185
    :cond_2
    :goto_2
    if-le v2, v7, :cond_3

    .line 186
    add-int/lit8 v4, v2, -0x1

    .line 189
    .local v4, "idx":I
    aget-object v10, v6, v4

    if-eqz v10, :cond_5

    .line 190
    if-eqz v7, :cond_4

    .line 191
    aget-object v10, v6, v4

    iget v10, v10, Ljp/co/omronsoft/openwnn/WnnSentence;->frequency:I

    add-int/lit8 v11, v7, -0x1

    aget-object v11, v6, v11

    iget v11, v11, Ljp/co/omronsoft/openwnn/WnnSentence;->frequency:I

    add-int/lit16 v11, v11, -0x3e8

    add-int/lit16 v11, v11, 0x258

    if-le v10, v11, :cond_5

    .line 174
    .end local v2    # "end":I
    .end local v4    # "idx":I
    :cond_3
    add-int/lit8 v7, v7, 0x1

    goto :goto_1

    .line 200
    .restart local v2    # "end":I
    .restart local v4    # "idx":I
    :cond_4
    aget-object v10, v6, v4

    iget v10, v10, Ljp/co/omronsoft/openwnn/WnnSentence;->frequency:I

    const/16 v11, -0x190

    if-gt v10, v11, :cond_3

    .line 205
    :cond_5
    invoke-virtual {p1, v7, v2}, Ljava/lang/String;->substring(II)Ljava/lang/String;

    move-result-object v5

    .line 211
    .local v5, "key":Ljava/lang/String;
    invoke-virtual {v1}, Ljava/util/LinkedList;->clear()V

    .line 212
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v10

    if-ne v2, v10, :cond_8

    .line 215
    iget-object v10, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mPosEndOfClause1:Ljp/co/omronsoft/openwnn/WnnPOS;

    invoke-direct {p0, v1, v5, v10, v12}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->singleClauseConvert(Ljava/util/LinkedList;Ljava/lang/String;Ljp/co/omronsoft/openwnn/WnnPOS;Z)Z

    .line 220
    :goto_3
    invoke-virtual {v1}, Ljava/util/LinkedList;->isEmpty()Z

    move-result v10

    if-eqz v10, :cond_9

    .line 221
    invoke-direct {p0, v5}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->defaultClause(Ljava/lang/String;)Ljp/co/omronsoft/openwnn/WnnClause;

    move-result-object v0

    .line 228
    .local v0, "bestClause":Ljp/co/omronsoft/openwnn/WnnClause;
    :goto_4
    if-nez v7, :cond_a

    .line 229
    new-instance v8, Ljp/co/omronsoft/openwnn/WnnSentence;

    invoke-direct {v8, v5, v0}, Ljp/co/omronsoft/openwnn/WnnSentence;-><init>(Ljava/lang/String;Ljp/co/omronsoft/openwnn/WnnClause;)V

    .line 233
    .local v8, "ws":Ljp/co/omronsoft/openwnn/WnnSentence;
    :goto_5
    iget v10, v8, Ljp/co/omronsoft/openwnn/WnnSentence;->frequency:I

    add-int/lit16 v10, v10, -0x3e8

    iput v10, v8, Ljp/co/omronsoft/openwnn/WnnSentence;->frequency:I

    .line 236
    aget-object v10, v6, v4

    if-eqz v10, :cond_6

    aget-object v10, v6, v4

    iget v10, v10, Ljp/co/omronsoft/openwnn/WnnSentence;->frequency:I

    iget v11, v8, Ljp/co/omronsoft/openwnn/WnnSentence;->frequency:I

    if-ge v10, v11, :cond_7

    .line 237
    :cond_6
    aput-object v8, v6, v4

    .line 185
    :cond_7
    add-int/lit8 v2, v2, -0x1

    goto :goto_2

    .line 218
    .end local v0    # "bestClause":Ljp/co/omronsoft/openwnn/WnnClause;
    .end local v8    # "ws":Ljp/co/omronsoft/openwnn/WnnSentence;
    :cond_8
    iget-object v10, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mPosEndOfClause3:Ljp/co/omronsoft/openwnn/WnnPOS;

    invoke-direct {p0, v1, v5, v10, v12}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->singleClauseConvert(Ljava/util/LinkedList;Ljava/lang/String;Ljp/co/omronsoft/openwnn/WnnPOS;Z)Z

    goto :goto_3

    .line 223
    :cond_9
    invoke-virtual {v1, v12}, Ljava/util/LinkedList;->get(I)Ljava/lang/Object;

    move-result-object v0

    check-cast v0, Ljp/co/omronsoft/openwnn/WnnClause;

    .restart local v0    # "bestClause":Ljp/co/omronsoft/openwnn/WnnClause;
    goto :goto_4

    .line 231
    :cond_a
    new-instance v8, Ljp/co/omronsoft/openwnn/WnnSentence;

    add-int/lit8 v10, v7, -0x1

    aget-object v10, v6, v10

    invoke-direct {v8, v10, v0}, Ljp/co/omronsoft/openwnn/WnnSentence;-><init>(Ljp/co/omronsoft/openwnn/WnnSentence;Ljp/co/omronsoft/openwnn/WnnClause;)V

    .restart local v8    # "ws":Ljp/co/omronsoft/openwnn/WnnSentence;
    goto :goto_5

    .line 243
    .end local v0    # "bestClause":Ljp/co/omronsoft/openwnn/WnnClause;
    .end local v2    # "end":I
    .end local v4    # "idx":I
    .end local v5    # "key":Ljava/lang/String;
    .end local v8    # "ws":Ljp/co/omronsoft/openwnn/WnnSentence;
    :cond_b
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v10

    add-int/lit8 v10, v10, -0x1

    aget-object v10, v6, v10

    if-eqz v10, :cond_c

    .line 244
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v9

    add-int/lit8 v9, v9, -0x1

    aget-object v9, v6, v9

    .line 246
    :cond_c
    return-object v9
.end method

.method public convert(Ljava/lang/String;)Ljava/util/Iterator;
    .locals 4
    .param p1, "input"    # Ljava/lang/String;
    .annotation system Ldalvik/annotation/Signature;
        value = {
            "(",
            "Ljava/lang/String;",
            ")",
            "Ljava/util/Iterator",
            "<",
            "Ljp/co/omronsoft/openwnn/WnnClause;",
            ">;"
        }
    .end annotation

    .prologue
    const/4 v0, 0x0

    .line 138
    iget-object v1, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mConnectMatrix:[[B

    if-eqz v1, :cond_0

    iget-object v1, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mDictionary:Ljp/co/omronsoft/openwnn/WnnDictionary;

    if-nez v1, :cond_1

    .line 153
    :cond_0
    :goto_0
    return-object v0

    .line 142
    :cond_1
    invoke-virtual {p1}, Ljava/lang/String;->length()I

    move-result v1

    const/16 v2, 0x32

    if-gt v1, v2, :cond_0

    .line 147
    iget-object v1, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mConvertResult:Ljava/util/LinkedList;

    invoke-virtual {v1}, Ljava/util/LinkedList;->clear()V

    .line 150
    iget-object v1, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mConvertResult:Ljava/util/LinkedList;

    iget-object v2, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mPosEndOfClause2:Ljp/co/omronsoft/openwnn/WnnPOS;

    const/4 v3, 0x1

    invoke-direct {p0, v1, p1, v2, v3}, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->singleClauseConvert(Ljava/util/LinkedList;Ljava/lang/String;Ljp/co/omronsoft/openwnn/WnnPOS;Z)Z

    move-result v1

    if-eqz v1, :cond_0

    .line 153
    iget-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mConvertResult:Ljava/util/LinkedList;

    invoke-virtual {v0}, Ljava/util/LinkedList;->iterator()Ljava/util/Iterator;

    move-result-object v0

    goto :goto_0
.end method

.method public setDictionary(Ljp/co/omronsoft/openwnn/WnnDictionary;)V
    .locals 1
    .param p1, "dict"    # Ljp/co/omronsoft/openwnn/WnnDictionary;

    .prologue
    .line 99
    invoke-interface {p1}, Ljp/co/omronsoft/openwnn/WnnDictionary;->getConnectMatrix()[[B

    move-result-object v0

    iput-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mConnectMatrix:[[B

    .line 102
    iput-object p1, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mDictionary:Ljp/co/omronsoft/openwnn/WnnDictionary;

    .line 103
    invoke-interface {p1}, Ljp/co/omronsoft/openwnn/WnnDictionary;->clearDictionary()I

    .line 104
    invoke-interface {p1}, Ljp/co/omronsoft/openwnn/WnnDictionary;->clearApproxPattern()V

    .line 107
    iget-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mIndepWordBag:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->clear()V

    .line 108
    iget-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mAllIndepWordBag:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->clear()V

    .line 109
    iget-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mFzkPatterns:Ljava/util/HashMap;

    invoke-virtual {v0}, Ljava/util/HashMap;->clear()V

    .line 112
    const/4 v0, 0x6

    invoke-interface {p1, v0}, Ljp/co/omronsoft/openwnn/WnnDictionary;->getPOS(I)Ljp/co/omronsoft/openwnn/WnnPOS;

    move-result-object v0

    iput-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mPosDefault:Ljp/co/omronsoft/openwnn/WnnPOS;

    .line 113
    const/4 v0, 0x0

    invoke-interface {p1, v0}, Ljp/co/omronsoft/openwnn/WnnDictionary;->getPOS(I)Ljp/co/omronsoft/openwnn/WnnPOS;

    move-result-object v0

    iput-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mPosEndOfClause1:Ljp/co/omronsoft/openwnn/WnnPOS;

    .line 114
    const/4 v0, 0x1

    invoke-interface {p1, v0}, Ljp/co/omronsoft/openwnn/WnnDictionary;->getPOS(I)Ljp/co/omronsoft/openwnn/WnnPOS;

    move-result-object v0

    iput-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mPosEndOfClause2:Ljp/co/omronsoft/openwnn/WnnPOS;

    .line 115
    const/4 v0, 0x2

    invoke-interface {p1, v0}, Ljp/co/omronsoft/openwnn/WnnDictionary;->getPOS(I)Ljp/co/omronsoft/openwnn/WnnPOS;

    move-result-object v0

    iput-object v0, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mPosEndOfClause3:Ljp/co/omronsoft/openwnn/WnnPOS;

    .line 116
    return-void
.end method

.method public setFilter(Ljp/co/omronsoft/openwnn/CandidateFilter;)V
    .locals 0
    .param p1, "filter"    # Ljp/co/omronsoft/openwnn/CandidateFilter;

    .prologue
    .line 125
    iput-object p1, p0, Ljp/co/omronsoft/openwnn/JAJP/OpenWnnClauseConverterJAJP;->mFilter:Ljp/co/omronsoft/openwnn/CandidateFilter;

    .line 126
    return-void
.end method
